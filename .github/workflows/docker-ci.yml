name: Docker CI

on:
  workflow_dispatch:
    inputs:
      file_path:
        description: 'Path to Dockerfile directory'
        required: true
        default: ''
      repository:
        description: 'Docker repository name'
        required: true
        default: ''
      tag:
        description: 'Docker repository tag'
        required: true
        default: 'latest'
      platforms:
        description: 'Docker build platforms'
        required: true
        default: 'linux/amd64, linux/arm64'

env:
  FILE_PATH: ${{ github.event.inputs.file_path }}
  REPOSITORY: ${{ github.event.inputs.repository }}
  TAG: ${{ github.event.inputs.tag }}
  VERSION: ${{ github.event.inputs.tag }}
  PLATFORMS: ${{ github.event.inputs.platforms }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Aliyun Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.FILE_PATH }}
          file: ${{ env.FILE_PATH }}/Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY }}:${{ env.TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY }}:latest
            ${{ secrets.ALIYUN_REGISTRY }}/${{ secrets.ALIYUN_NAMESPACE }}/${{ env.REPOSITORY }}:${{ env.TAG }}
            ${{ secrets.ALIYUN_REGISTRY }}/${{ secrets.ALIYUN_NAMESPACE }}/${{ env.REPOSITORY }}:latest
          build-args: |
            VERSION=${{ env.VERSION }}

      - name: Docker Hub Description
        if: github.event_name != 'pull_request'
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY }}
          readme-filepath: ${{ env.FILE_PATH }}/README.md
